{
  "name": "SMILe-MCP",
  "nodes": [
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -400,
        100
      ],
      "id": "9bf0eb35-03a1-4e0e-bb68-927a002ad179",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "z5D0fFrw6QeEKb61",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -900,
        -120
      ],
      "id": "5e54d31d-e46c-4c62-bec2-3861a384fb29",
      "name": "When chat message received",
      "webhookId": "30a8ecf3-91ab-4b4d-b8fb-3ee68ee09964"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"body\": {\n    \"chatInput\" : \"{{ $json.chatInput }}\",\n    \"sessionId\" : \"{{ $json.sessionId }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -700,
        -120
      ],
      "id": "83503e39-8e8a-4da2-be60-5db695cde88d",
      "name": "JSONBody"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Latest User's(Human) query :\n{{ $json.body.chatInput }}",
        "options": {
          "systemMessage": "You are a helpful assistant designed exclusively for Shree Maruti Integrated Logistics (SMILe).\n\nüõë Strict Tool Usage Instructions:\n- ‚ùå NEVER use MCP tools unless the user explicitly provides valid data (e.g., pincode or address) AND asks a relevant question (e.g., serviceability, rate, or delivery time).\n- ‚ùå Do NOT use MCP tools for general or unclear queries like ‚Äúhi‚Äù, ‚Äúwhich area is it?‚Äù, ‚Äútell me about SMILE‚Äù, etc.\n- ‚úÖ If the user‚Äôs message is vague or incomplete, respond with a polite clarification request instead of using tools.\n\n‚úÖ Response Guidelines:\n- üéØ Only answer what is asked ‚Äî **no assumptions, no extra information**.\n- ‚úçÔ∏è Keep responses short, clear, and limited to **one line** where possible.\n- ‚úÖ Mention only SMILE (Shree Maruti Integrated Logistics) ‚Äî do not mention or compare with other companies.\n- ‚ùå Do NOT show tool responses, JSON, or technical output to the user.\n- üß† Be polite, humble, and friendly. Ask a question **only** when a tool fails or required info is missing.\n\nüìå Example Scenarios:\n\n1. **User**: hi  \n   **You**: Hello! How can I assist you with SMILE services today?\n\n2. **User**: which area is it?  \n   **You**: Could you please share the pincode or location you're referring to?\n\n3. **User**: is 400074 serviceable?  \n   *(Tool may be used)*  \n   **You**: Yes, SMILE services are available for pincode 400074.\n\n4. **User**: tell me your rates  \n   **You**: Please share the pickup and delivery pincodes so I can check the rate for you.\n\n5. **User**: track my shipment for phone number 9021810551  \n   *(Tool may be used)*  \n   **You**: No orders found for this number. Could you please confirm your details or share the AWB number?\n\n\n---\n\nüö´ Common Mistakes to Avoid:\n- ‚ùå Using tools when user input is vague or general.\n- ‚ùå Giving extra info like service type, slots, or time when not asked.\n- ‚ùå Answering based on assumptions.\n- ‚ùå Starting with \"Our system indicates...\" ‚Äî keep it conversational and direct.\n‚ùå Never say things like:\n- ‚ÄúI think there was a tool call‚Ä¶‚Äù\n- ‚ÄúLet me format my response‚Ä¶‚Äù\n- ‚ÄúHere's the tool result‚Ä¶‚Äù\n- \"shipsy\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -360,
        -100
      ],
      "id": "3750d534-b37e-41f3-818d-1f7a1285fa92",
      "name": "SMILeMARUT",
      "executeOnce": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "smile-ai-mcp",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -900,
        -300
      ],
      "id": "35d58668-764c-44ab-a0df-e7cc0a68403b",
      "name": "WebhookInput",
      "webhookId": "9a1b1df0-47d3-4068-b058-5af3f91f797e"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        80,
        -260
      ],
      "id": "1f4d21db-f497-49dc-847b-f2830d608f9f",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -260,
        100
      ],
      "id": "f313abeb-e266-4777-99b4-ee7090a9eebf",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "4tNYWqouAxWbiVAQ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "table": {
          "__rl": true,
          "value": "chat_history",
          "mode": "list",
          "cachedResultName": "chat_history"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('WebhookInput').item.json.body.sessionId }}",
            "user_message": "={{ $('WebhookInput').item.json.body.chatInput }}",
            "ai_response": "={{ $json.output }}",
            "timestamp": "={{ $now }}",
            "workflow_name": "={{ $workflow.id }}",
            "workflow_output": "={{ $json}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ai_response",
              "displayName": "ai_response",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "workflow_name",
              "displayName": "workflow_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "workflow_output",
              "displayName": "workflow_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        80,
        -100
      ],
      "id": "73253fa7-c728-4857-9bcd-43745f4f5b15",
      "name": "main_chat_history",
      "credentials": {
        "postgres": {
          "id": "4tNYWqouAxWbiVAQ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "effad701-5937-41ef-8317-636b92d5eecf",
              "leftValue": "={{ $json.body.chatInput }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -700,
        -300
      ],
      "id": "41d094a1-d24a-40d9-9eaf-47ee3f200406",
      "name": "If"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"output\": \"Hi! how can I help you?\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        -280
      ],
      "id": "800d0cf1-11f3-4e72-9512-001e7ede7ece",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "sseEndpoint": "https://remote-mcp-server-authless.prayog-mcp.workers.dev/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        20,
        120
      ],
      "id": "9a841ed5-16b6-4ced-9900-ef1d051b3c60",
      "name": "MCP Client"
    }
  ],
  "pinData": {
    "WebhookInput": [
      {
        "json": {
          "headers": {
            "host": "marut.gosmile.in",
            "x-real-ip": "49.36.103.109",
            "x-forwarded-for": "49.36.103.109",
            "connection": "close",
            "content-length": "150",
            "sec-ch-ua-platform": "\"macOS\"",
            "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36",
            "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"",
            "content-type": "application/json",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "sec-gpc": "1",
            "accept-language": "en-GB,en;q=0.5",
            "origin": "https://www.w3schools.com",
            "sec-fetch-site": "cross-site",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "referer": "https://www.w3schools.com/",
            "accept-encoding": "gzip, deflate, br, zstd"
          },
          "params": {},
          "query": {},
          "body": {
            "action": "sendMessage",
            "sessionId": "86b7329d-6cd1-4f36-903a-4e1a2b330ece",
            "route": "general",
            "chatInput": "What does it do ?",
            "metadata": {
              "userId": ""
            }
          },
          "webhookUrl": "https://marut.gosmile.in/n8n/webhook/smile-ai",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "SMILeMARUT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "JSONBody",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSONBody": {
      "main": [
        [
          {
            "node": "SMILeMARUT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMILeMARUT": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          },
          {
            "node": "main_chat_history",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WebhookInput": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "SMILeMARUT",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "SMILeMARUT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "SMILeMARUT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e420bab5-593d-4a8e-90b3-3f8171b58b78",
  "meta": {
    "instanceId": "03883649a96ad19f7263559e2b819ecc5413ebc75736f9548f3252733f419860"
  },
  "id": "PMrdgFpjyReLeJHi",
  "tags": []
}